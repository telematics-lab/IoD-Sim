{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "1-Install dependencies",
      "type": "shell",
      "command": "./tools/install-dependencies.sh",
      "problemMatcher": []
    },
    {
      "label": "2-Integrate IoD Sim with ns3",
      "type": "shell",
      "command": "./tools/prepare-ns3.sh",
      "problemMatcher": []
    },
    {
      "label": "3-Configure IoD Sim",
      "type": "shell",
      "command": "./ns3 configure --enable-examples --disable-mpi --disable-python --enable-modules=drone --verbose",
      "options": {
        "cwd": "${workspaceFolder}/ns3/"
      },
      "group": "build",
      "problemMatcher": []
    },
    {
      "label": "4-Build IoD Sim",
      "type": "shell",
      "command": "./ns3 build -j$(grep -c ^processor /proc/cpuinfo)",
      "options": {
        "cwd": "${workspaceFolder}/ns3/"
      },
      "group": "build",
      "problemMatcher": [
        "$gcc"
      ]
    },
    {
      "label": "Cleanup results directory",
      "type": "shell",
      "command": "rm -rf ./results/*",
      "group": "none",
      "problemMatcher": []
    },
    {
      "label": "Cleanup Build",
      "type": "shell",
      "command": "./ns3 clean",
      "options": {
        "cwd": "${workspaceFolder}/ns3"
      },
      "group": "none",
      "problemMatcher": []
    },
    {
      "label": "Run IoD Sim",
      "type": "shell",
      "command": "./ns3 run \"iod-sim --config=${input:scenarioConfigurationFilepath}\"",
      "options": {
        "cwd": "${workspaceFolder}/ns3"
      },
      "group": "test"
    },
    {
      "label": "Profile IoD Sim",
      "type": "shell",
      "command": "valgrind --tool=callgrind ${workspaceFolder}/ns3/build/src/drone/examples/ns3.33-iod-sim-debug --config=${input:scenarioConfigurationFilepath}",
      "options": {
        "cwd": "${workspaceFolder}/ns3",
        "env": {
          "LD_LIBRARY_PATH": "${workspaceFolder}/ns3/build/lib/"
        }
      },
      "group": "test"
    },
    {
      "label": "docs",
      "type": "shell",
      "command": "make html",
      "options": {
        "cwd": "${workspaceFolder}/docs"
      },
      "windows": {
        "command": "./make.bat html",
        "options": {
          "cwd": "${workspaceFolder}/docs"
        }
      },
      "group": "build"
    },
    {
      "label": "docs (venv)",
      "type": "shell",
      "command": "make html",
      "options": {
        "cwd": "${workspaceFolder}/docs",
        "env": {
          "SPHINXBUILD": "${workspaceFolder}/venv/Scripts/sphinx-build"
        }
      },
      "windows": {
        "command": "./make.bat html",
        "options": {
          "cwd": "${workspaceFolder}/docs",
          "env": {
            "SPHINXBUILD": "${workspaceFolder}\\venv\\Scripts\\sphinx-build.exe"
          }
        }
      },
      "group": "build",
      "dependsOn": [
        "docs (venv) - clean"
      ]
    },
    {
      "label": "docs (venv) - clean",
      "type": "shell",
      "command": "make clean",
      "options": {
        "cwd": "${workspaceFolder}/docs",
        "env": {
          "SPHINXBUILD": "${workspaceFolder}/venv/Scripts/sphinx-build"
        }
      },
      "windows": {
        "command": "./make.bat clean",
        "options": {
          "cwd": "${workspaceFolder}/docs",
          "env": {
            "SPHINXBUILD": "${workspaceFolder}\\venv\\Scripts\\sphinx-build.exe"
          }
        }
      }
    },
    {
      "label": "docs (venv) - open",
      "type": "shell",
      "command": "xdg-open ./_build/html/index.html",
      "options": {
        "cwd": "${workspaceFolder}/docs"
      },
      "windows": {
        "command": ".\\_build\\html\\index.html",
        "options": {
          "cwd": "${workspaceFolder}\\docs"
        }
      },
      "dependsOn": [
        "docs (venv)"
      ]
    }
  ],

  "inputs": [
    {
      "id": "scenarioConfigurationFilepath",
      "type": "promptString",
      "description": "Path to configuration file for this scenario",
      "default": "./src/drone/config/simple_wifi.json"
    }
  ]
}
