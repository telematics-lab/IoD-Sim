{
  "name": "ntn_hap-big",
  "resultsPath": "../results/",
  "logOnFile": true,
  "duration": 1023160,
  "phyLayer": [
    {
      "type": "3GPP",
      "environment": "NTN-Rural",
      "attributes": [
        {
          "name": "UpdatePeriod",
          "value": 1
        }
      ],
      "channel": {
        "propagationLossModel": {
          "name": "ns3::ThreeGppNTNRuralPropagationLossModel",
          "attributes": [
            {
              "name": "Frequency",
              "value": 20e9
            },
            {
              "name": "ShadowingEnabled",
              "value": false
            }
          ]
        },
        "conditionModel": {
          "name": "ns3::ThreeGppNTNRuralChannelConditionModel",
          "attributes": [
            {
              "name": "UpdatePeriod",
              "value": 1
            }
          ]
        }
      }
    }
  ],
  "macLayer": [
    {
      "type": "NullNtnDemo",
      "timeResolution": 250,
      "bandwidth": 400e6,
      "rbBandwidth": 120e3,
      "satEirpDensity": 40,
      "ueAntennaNoiseFigure": 1.2
      // here we can do beamforming and compute the SNR every time
    }
  ],
  "nodes": [
    {
      // GEO Satellite
      "type": "GeoSat",
      "netDevices": [
        {
          "type": "simple",
          "name": "ns3::SimpleNetDevice",
          "attributes": [],
          // TODO: What's the relation between netDevices and antennas?
          // Antenna may be configured globally on the node. In this way, all the netDevices will use the same antenna.
          // If we want to configure different antennas for different netDevices, we have to specify the antenna in the netDevice.
          "antenna": {
            "name": "ns3::UniformPlanarArray",
            "attributes": [
              {
                "name": "NumColumns",
                "value": 1
              },
              {
                "name": "NumRows",
                "value": 1
              },
              {
                "name": "AntennaElement",
                "value": {
                  "name": "ns3::CircularApertureAntennaModel",
                  "attributes": [
                    {
                      "name": "AntennaMaxGainDb",
                      "value": 58.5
                    },
                    {
                      "name": "AntennaCircularApertureRadius",
                      "value": 2.5
                    },
                    {
                      "name": "OperatingFrequency",
                      "value": 20e9
                    }
                  ]
                }
              },
              {
            "name": "DowntiltAngle",
                "value": 3.1415926535897931 // 180.0
              }
            ]
          }
        }
      ],
      "mobilityModel": {
        "name": "ns3::GeocentricConstantPositionMobilityModel",
        "attributes": [
          {
            "name": "EarthSpheroidType",
            "value": "WGS84"
          },
          {
            "name": "Position",
            // Eutelsat 5 West B: https://www.n2yo.com/?s=44624
            "value": [0.04, -4.95, 35770.88e3]
          }
        ]
      }
    },
    {
      // HAP
      "netDevices": [
        {
          "type": "simple",
          "name": "ns3::SimpleNetDevice",
          "attributes": [],
          // TODO: What's the relation between netDevices and antennas?
          // Antenna may be configured globally on the node. In this way, all the netDevices will use the same antenna.
          // If we want to configure different antennas for different netDevices, we have to specify the antenna in the netDevice.
          "antenna": {
            "name": "ns3::UniformPlanarArray",
            "attributes": [
              {
                "name": "NumColumns",
                "value": 1
              },
              {
                "name": "NumRows",
                "value": 1
              },
              {
                "name": "AntennaElement",
                "value": {
                  "name": "ns3::CircularApertureAntennaModel",
                  "attributes": [
                    {
                      "name": "AntennaMaxGainDb",
                      "value": 39.7
                    },
                    {
                      "name": "AntennaCircularApertureRadius",
                      "value": 0.3
                    },
                    {
                      "name": "OperatingFrequency",
                      "value": 20e9
                    }
                  ]
                }
              }
            ]
          }
        }
      ],
      "mobilityModel": {
        "name": "ns3::ParametricSpeedDroneMobilityModel",
        "attributes": [
          {
            "name": "UseGeodedicSystem",
            "value": true
          },
          {
            "name": "SpeedCoefficients",
            "value": [24.0]
          },
          {
            "name": "FlightPlan",
            "value": [
              {
                // Svalbard, Norway
                "position": [78.244789, 15.4843571, 20e3],
                "interest": 0,
                "restTime": 3.0
              },
              {
                // Tehran, Iran
                "position": [35.7074505, 51.1498211, 20e3],
                "interest": 3
              },
              {
                // GeoSat position
                "position": [0.04, -4.95, 20e3],
                "interest": 0,
                "restTime": 3.0
              },
              {
                // Reykjavik, Iceland
                "position": [64.133542, -21.9348416, 20e3],
                "interest": 3
              },
              {
                // Svalbard, Norway
                "position": [78.244789, 15.4843571, 20e3],
                "interest": 0,
                "restTime": 3.0
              }
            ]
          }
        ]
      }
    }
  ],
  "logComponents": [
    "Scenario",
    "ThreeGppSpectrumPropagationLossModel",
    "ThreeGppPropagationLossModel",
    "ChannelConditionModel",
    "NullNtnDemoMacLayerSimulationHelper",
    "ConstantAccelerationDroneMobilityModel",
    "ParametricSpeedDroneMobilityModel",
    "Planner"
  ]
}
